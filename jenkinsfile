pipeline {
    agent any

    environment {
        DEPLOY_USER = 'ec2-user'
        DEPLOY_HOST = '54.153.65.92'
        APP_DIR = '/home/ec2-user/node-js-sample-jenkins'
        REPO_URL = 'https://github.com/iamtruptimane/node-js-sample-jenkins.git'
    }

    stages {
        stage('Clone Code') {
            steps {
                echo 'Cloning the repository...'
                git url: "${REPO_URL}", branch: 'master'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh 'npm install'
            }
        }

        stage('Deploy to Deployment Server') {
            steps {
                echo 'Deploying to the EC2 instance...'
                sshagent(['ssh-key']) {
                    script {
                        def deployScript = """
                            echo "✅ Connected to deployment server"

                            # Install pm2 if not present, run as sudo without password prompt
                            which pm2 || echo "Installing pm2..." && sudo npm install -g pm2

                            # Check if the app directory exists, otherwise clone the repo
                            if [ ! -d "${APP_DIR}" ]; then
                                git clone ${REPO_URL} ${APP_DIR}
                            else
                                cd ${APP_DIR}
                                git pull origin master
                            fi

                            cd ${APP_DIR}

                            # Install any missing dependencies
                            npm install

                            # Stop the app if it's running and start it again
                            pm2 stop all || true
                            pm2 start index.js --name app
                            pm2 save
                        """

                        // Run the deploy script on the remote EC2 instance
                        sh(script: deployScript, returnStdout: true)
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment succeeded.'
        }
        failure {
            echo '❌ Deployment failed. Check Jenkins logs.'
        }
    }
}
